version: '3.1'

services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - ${DB_PORT}:${DB_PORT}
    restart: always
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', '0.0.0.0', '--silent']
      interval: 10s
      retries: 10
      start_period: 10s
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - MYSQL_TCP_PORT=${DB_PORT}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - store_volume:/var/lib/mysql
    networks:
      - store_network

  # adminer:
  #   container_name: adminer
  #   image: adminer
  #   restart: always
  #   env_file: .env
  #   environment:
  #     ADMINER_DEFAULT_SERVER: ${DB_HOST}:${DB_PORT}
  #     ADMINER_DESIGN: galkaev
  # depends_on:
  #   mysql:
  #     condition: service_healthy
  # networks:
  #   - swapi_network
  # links:
  #   - mysql
  # ports:
  #   - 8080:8080

  store:
    build:
      context: .
      dockerfile: Dockerfile
    image: store
    container_name: store
    command: sh -c "npm run migration:run && npm run seed:run && npm run start:prod"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://store:${PORT}/api/health']
      interval: 10s
      retries: 10
      start_period: 10s
    depends_on:
      mysql:
        condition: service_healthy
      # test_mysql:
      #   condition: service_healthy
    restart: always
    networks:
      - store_network
    links:
      - mysql
    ports:
      - ${PORT}:${PORT}

volumes:
  store_volume:
    name: store_volume
    driver: local

networks:
  store_network:
    name: store_network
    driver: bridge
